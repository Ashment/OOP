<!DOCTYPE html>
<html>
    <head>
<!--include head.txt -->
        <title>
            9. Technicalities: Classes, etc.
        </title>
<!--include googleAnalyticsScript.txt -->
    </head>

    <body>
        <div class="wrapper">
<!--include navbar.txt -->
            <div id="content">
                <h1>
                    9. Technicalities: Classes, etc.
                </h1>
                <details>
                    <summary class="sum1">
                    9.1 User-defined types
                    </summary>
                    
                    <figure>
                        <img src="" width="40%">
                        <figcaption>
                        </figcaption>
                    </figure>
                    <p>
                    The C++ language provides you with some built-in types,
such as char, int, and double (§A.8). A type is called built-in if the
compiler knows how to represent objects of the type and which operations can be
done on it (such as + and *) without being
told by declarations supplied by a programmer in source code.
                    </p>
                    <p>
                    
                    </p>
                </details>
                <details>
                    <summary class="sum1">
                    9.2 Classes and members
                    </summary>
                    <figure>
                        <img src="" width="40%">
                        <figcaption>
                        </figcaption>
                    </figure>
                    <p>
                    A class is a user-defined type. It is composed of built-in
types, other user-defined types, and functions. The parts used to define
the class are called members. A class has zero or more members. For example:

                    </p>
                    <p>
                    class X { <br /> 
public:<br /> 
int m; // data member <br /> 
int mf(int v) { int old = m; m=v; return old; } // function member <br /> 
};<br />
Members can be of various types. Most are either data members, which define the
representation of an object of the class, or
function members, which provide operations on such objects. We access members
using the object.member notation. For
example:<br />
X var;            // var is a variable of type X<br />
var.m = 7;        // assign to var’s data member m<br />
int x = var.mf(9);//call var’s member function mf()<br />

You can read var.m as var’s m. Most people pronounce it “var dot m” or “var’s
m.” The type of a member determines what
operations we can do on it. We can read and write an int member, call a
function member, etc.<br />
A member function, such as X’s mf(), does not need to use the var.m notation.
It can use the plain member name (m in this
example). Within a member function, a member name refers to the member of that
name in the object for which the member
function was called. Thus, in the call var.mf(9), the m in the definition of
mf() refers to var.m.

                    </p>
                </details>
                <details>
                    <summary class="sum1">
                    9.3 Interface and implementation
                    </summary>
                    <figure>
                        <img src="" width="40%">
                        <figcaption>
                        </figcaption>
                    </figure>
                    <p>
Usually, we think of a class as having an interface plus an implementation. The
interface is the part of the class’s declaration
that its users access directly. The implementation is that part of the class’s
declaration that its users access only indirectly
through the interface. The public interface is identified by the label public:
and the implementation by the label private:. You
can think of a class declaration like this: <br />

class X {<br />
// this class’s name is X<br />
public:<br />
// public members:<br />
//<br />
– the interface to users (accessible by all)<br />
// functions<br />
// types<br />
// data (often best kept private)<br />
private:<br />
// private members:<br />
//<br />
– the implementation details (used by members of this class only)<br />
// functions<br />
// types<br />
// data<br />
};<br />
Class members are private by default<br />

We use private and public to represent the important distinction between an
interface (the user’s view of the class) and
implementation details (the implementer’s view of the class). We explain that
and give lots of examples as we go along. Here
we’ll just mention that for something that’s just data, this distinction
doesn’t make sense. So, there is a useful simplified
notation for a class that has no private implementation details.

                    </p>
                </details>
                <details>
                    <summary class="sum1">
                    9.4 Evolving a class
                    </summary>
                    <figure>
                        <img src="" width="40%">
                        <figcaption>
                        </figcaption>
                    </figure>
                    <p>
                    </p>
                    <details>
                        <summary class="sum2">
                        9.4.1 struct and functions
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                    <details>
                        <summary class="sum2">
                        9.4.2 Member functions and constructors
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                    <details>
                        <summary class="sum2">
                        9.4.3 Keep details private
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                    <details>
                        <summary class="sum2">
                        9.4.4 Defining member functions
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                    <details>
                        <summary class="sum2">
                        9.4.5 Referring to the current object
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                    <details>
                        <summary class="sum2">
                        9.4.6 Reporting errors
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                </details>
                <details>
                    <summary class="sum1">
                    9.5 Enumerations
                    </summary>
                    <figure>
                        <img src="" width="40%">
                        <figcaption>
                        </figcaption>
                    </figure>
                    <p>
                    </p>
                    <details>
                        <summary class="sum2">
                        9.5.1 "Plain" enumerations
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                </details>
                <details>
                    <summary class="sum1">
                    9.6 Operator overloading
                    </summary>
                    <figure>
                        <img src="" width="40%">
                        <figcaption>
                        </figcaption>
                    </figure>
                    <p>
                    </p>
                </details>
                <details>
                    <summary class="sum1">
                    9.7 Class interfaces
                    </summary>
                    <figure>
                        <img src="" width="40%">
                        <figcaption>
                        </figcaption>
                    </figure>
                    <p>
                    </p>
                    <details>
                        <summary class="sum2">
                        9.7.1 Argument types
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                    <details>
                        <summary class="sum2">
                        9.7.2 Copying
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                    <details>
                        <summary class="sum2">
                        9.7.3 Default constructors
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                    <details>
                        <summary class="sum2">
                        9.7.4 const member functions
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                    <details>
                        <summary class="sum2">
                        9.7.5 Members and "helper functions"
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                </details>
                <details>
                    <summary class="sum1">
                    9.8 The Date class
                    </summary>
                    <figure>
                        <img src="" width="40%">
                        <figcaption>
                        </figcaption>
                    </figure>
                    <p>
                    </p>
                </details>

                <details>
                    <summary class="sum1">
                    Test Yourself!
                    </summary>
                    <figure>
                        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Exams_in_Jaura%2C_India.jpg/560px-Exams_in_Jaura%2C_India.jpg"
                        width="20%">
                        <figcaption>
                        </figcaption>
                    </figure>
<!-- Include the test material here! -->
                </details>

                <details>
                    <summary class="sum1">
                    Drill
                    </summary>
                    <figure>
                        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Queens.guard.buck.palace.arp.jpg/600px-Queens.guard.buck.palace.arp.jpg"
                        width="20%">
                        <figcaption>
                        </figcaption>
                    </figure>

                    <ol>
                    </ol>
                </details>
            </div>
        </div>

    </body>
</html>
